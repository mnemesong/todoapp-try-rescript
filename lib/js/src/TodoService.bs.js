// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var TodoTask = require("./TodoTask.bs.js");
var Js_string = require("rescript/lib/js/js_string.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var ResultMonad = require("./ResultMonad.bs.js");
var TodoResponsible = require("./TodoResponsible.bs.js");

function TodoService(TBM, TSM) {
  var rerenderClearForm = function (applyForm) {
    var result = ResultMonad.ResultMonad.bind(Curry._1(TBM.renderClearForm, undefined), (function (param) {
            return Curry._1(TBM.setFormOnApplyAction, applyForm);
          }));
    if (result.TAG === /* Ok */0) {
      return ;
    }
    console.log("Error:", result._0);
  };
  var collectTasks = function (acc, el) {
    return Belt_Array.concat(acc, el.tasks);
  };
  var rerenderResponsibles = function (changeTaskFun) {
    var result = ResultMonad.ResultMonad.bind(ResultMonad.ResultMonad.map(ResultMonad.ResultMonad.bind(ResultMonad.ResultMonad.bind(Curry._1(TSM.readResponsiblesState, undefined), (function (state) {
                        return Curry._1(TBM.renderResponsibles, state);
                      })), (function (param) {
                    return Curry._1(TSM.readResponsiblesState, undefined);
                  })), (function (state) {
                return Belt_Array.reduce(state, [], collectTasks);
              })), (function (tasks) {
            var errorMsg = Js_string.concatMany(Belt_Array.map(Belt_Array.map(tasks, (function (t) {
                            return Curry._2(TBM.setTaskOnClickAction, t.id, changeTaskFun);
                          })), (function (tr) {
                        if (tr.TAG === /* Ok */0) {
                          return "";
                        } else {
                          return tr._0;
                        }
                      })), "");
            if (errorMsg.length > 0) {
              return {
                      TAG: /* Error */1,
                      _0: "SetTaskErrors: " + errorMsg
                    };
            } else {
              return {
                      TAG: /* Ok */0,
                      _0: undefined
                    };
            }
          }));
    if (result.TAG === /* Ok */0) {
      return ;
    }
    console.log(result._0);
  };
  var changeTask = function (taskId) {
    console.log("changeTask function called");
    return ResultMonad.ResultMonad.map(ResultMonad.ResultMonad.bind(ResultMonad.ResultMonad.map(Curry._1(TSM.readResponsiblesState, undefined), (function (resps) {
                          return Belt_Array.map(resps, (function (r) {
                                        var nr = TodoResponsible.TodoResponsible.switchChekedTask(r, taskId);
                                        if (nr.TAG === /* Ok */0) {
                                          return nr._0;
                                        } else {
                                          return r;
                                        }
                                      }));
                        })), TSM.writeResponsiblesState), (function (param) {
                  rerenderResponsibles(changeTask);
                }));
  };
  var applyForm = function (param) {
    return ResultMonad.ResultMonad.map(ResultMonad.ResultMonad.map(ResultMonad.ResultMonad.bind(ResultMonad.ResultMonad.map(ResultMonad.ResultMonad.liftTuple([
                                Curry._1(TBM.readFormVal, undefined),
                                Curry._1(TSM.readResponsiblesState, undefined)
                              ]), (function (tuple) {
                              var formVal = tuple[0];
                              return Belt_Array.map(tuple[1], (function (r) {
                                            return TodoResponsible.TodoResponsible.addTask(r, TodoTask.TodoTask.$$new(formVal));
                                          }));
                            })), TSM.writeResponsiblesState), (function (param) {
                      rerenderClearForm(applyForm);
                    })), (function (param) {
                  rerenderResponsibles(changeTask);
                }));
  };
  var changeChecked = function (taskId) {
    return ResultMonad.ResultMonad.bind(Curry._1(TSM.readResponsiblesState, undefined), (function (rs) {
                  return Curry._1(TSM.writeResponsiblesState, Belt_Array.map(rs, (function (r) {
                                    return TodoResponsible.TodoResponsible.tryToSwitchChackedTask(r, taskId);
                                  })));
                }));
  };
  return {
          rerenderClearForm: rerenderClearForm,
          collectTasks: collectTasks,
          rerenderResponsibles: rerenderResponsibles,
          changeTask: changeTask,
          applyForm: applyForm,
          changeChecked: changeChecked
        };
}

exports.TodoService = TodoService;
/* TodoTask Not a pure module */
