// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");

function pure(a) {
  return {
          TAG: /* Ok */0,
          _0: a
        };
}

function map(a, f) {
  if (a.TAG === /* Ok */0) {
    return {
            TAG: /* Ok */0,
            _0: Curry._1(f, a._0)
          };
  } else {
    return {
            TAG: /* Error */1,
            _0: a._0
          };
  }
}

function bind(a, f) {
  if (a.TAG === /* Ok */0) {
    return Curry._1(f, a._0);
  } else {
    return {
            TAG: /* Error */1,
            _0: a._0
          };
  }
}

function liftTuple(tuple) {
  var b = tuple[1];
  var a = tuple[0];
  if (a.TAG === /* Ok */0) {
    if (b.TAG === /* Ok */0) {
      return {
              TAG: /* Ok */0,
              _0: [
                a._0,
                b._0
              ]
            };
    } else {
      return {
              TAG: /* Error */1,
              _0: b._0
            };
    }
  } else {
    return {
            TAG: /* Error */1,
            _0: a._0
          };
  }
}

var ResultMonad = {
  pure: pure,
  map: map,
  bind: bind,
  liftTuple: liftTuple
};

exports.ResultMonad = ResultMonad;
/* No side effect */
